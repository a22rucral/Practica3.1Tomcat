{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Practica 3.1 Tomcat y Maven.","text":""},{"location":"#instalacion-de-apache-tomcat-en-debian-11","title":"Instalaci\u00f3n de Apache Tomcat en Debian 11.","text":""},{"location":"#configuracion-previa","title":"Configuraci\u00f3n Previa .","text":"<p>Antes de empezar tenemos que abrir el puerto por defecto de tomcat 8080 con el siguiente comando:</p> <pre><code>sudo ufw allow 8080\n</code></pre> <p>A continueaci\u00f3n actualizaremos los repositorios ejecutando el siguiente comando. </p> <p></p> <p>Instalaremos Java como se muestra en la siguiente captura. </p> <p></p>"},{"location":"#instalacion","title":"Instalaci\u00f3n.","text":"<p>Instalamos tomcat con el siguiente comando: </p> <p></p> <p>Ahora a\u00f1adiremos un usuario de tomcat, previamente habiendo creado un grupo ejecutando los comandos de la captura.</p> <p></p> <p>Ahora que Tomcat est\u00e1 instalado, podemos iniciarlo y comprobaremos si lo hace de forma correcta, deber\u00eda aparecer como en la captura. </p> <p></p> <p>Ahora definiremos un usuario con acceso a tomcat. Para ello entraremos en el archivo de configuraci\u00f3n /etc/tomcat9 </p> <p></p> <p>Y lo editaremos de la siguiente manera. </p> <p></p> <p>Ahora si accedemos al enlace http://localhost:8080 deber\u00eda salir lo siguiente. </p> <p></p> <p>El siguiente paso es descargar el gestor web de Tomcat y el administrador anfitri\u00f3n de Tomcat de la siguiente manera: </p> <p></p> <p>Tras esto podemos acceder a localhost con nuestras credenciales de usuario previamente introducidas y accederemos a la siguiente p\u00e1gina. </p> <p></p>"},{"location":"#despliegue-manual-mediante-gui-de-administracion","title":"Despliegue Manual Mediante GUI de administraci\u00f3n","text":"<p>En la siguiente secci\u00f3n de la p\u00e1gina previamente abierta, subiremos un archivo war que en este caso se llamar\u00e1 sample y le damos a desplegar.</p> <p></p> <p>Tras el despliegue nos apracer\u00e1 en aplicaciones .</p> <p></p> <p>Si hacemos click podremos acceder a el archivo que se ver\u00e1 de la siguiente manera. </p> <p></p>"},{"location":"#instalacion-de-maven","title":"Instalaci\u00f3n de Maven.","text":"<p>Instalamos maven con el siguiente comando :</p> <p></p> <p>Tras esto comprobamos si maven est\u00e1 instalado y la versi\u00f3n que tenemos:</p> <p></p>"},{"location":"#despliegue-aplicacion-prueba","title":"Despliegue Aplicacion Prueba","text":"<p>Debemos a\u00f1adir configuraciones al archivo de /etc/tomcat9/tomcat-user.xml para que permita que Maven se autentique contra Tomcat y pueda realizar el despliegue. </p> <p></p> <p>Como segundo paso deberemos editar el archivo /etc/maven/settings.xml para indicarle a Maven un identificador para el servidor sobre el que vamos a desplegar, as\u00ed como las credenciales, como aparece en la siguiente captura: </p> <p></p> <p>Teniendo ya listo para realizar despligues, ahora crearemos una aplicacion de JAva para ver si podemos desplegarla sobre la arquitectura que ya hemos montado para ello usaremos el siguiente comando : </p> <pre><code>mvn archetype:generate -DgroupId=raul -DartifactId=war-deploy -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false\n</code></pre> <p></p> <p>Tras esto, se abr\u00e1 creado en la ra\u00edz una carpeta que es la que contiene la aplicaci\u00f3n con los siguientes archivos :</p> <p></p> <p>Ahora editaremos el pom.xml de la siguiente manera.</p> <p></p> <p>Tras esto veremos nuestra aplicaci\u00f3n subida a la web y podremos acceder a ella. </p> <p></p>"},{"location":"#rock-paper-scissorc","title":"Rock Paper Scissorc","text":"<p>Realizaremos el despliegue con otra aplicaci\u00f3n alojada en un repositorio de github.  Primero lo clonamos : </p> <p></p> <p>Tras esto nos situaremos dentro de la carpeta del repositorio clonada y cambiamos de rama con el siguiente comando.</p> <p></p> <p>Subiremos el archivo .war que se enceuntra dentro de la carpeta target del respositorio desde el manager de tomcat. </p> <p></p> <p>Configuraremos el pom.xml con lo siguientes datos:</p> <p></p> <p>Desplegamremos la aplicaci\u00f3n  con el siiguiente comando en el mismo nivel en el que se encuentra el archivo pom.xml. </p> <pre><code>mvn tomcat:deploy\n</code></pre> <p></p> <p>Vemos que la aplicacion est\u00e1 en el manager de tomcat.</p> <p></p> <p>Mediante la ruta http://localhost:8080/rock-paper-scissors accederemos a la aplicaci\u00f3n y podremos interactuar con ella. </p> <p></p>"},{"location":"#cuestiones","title":"Cuestiones :","text":"<p>Hab\u00e9is visto que los archivos de configuraci\u00f3n que hemos tocado contienen contrase\u00f1as en texto plano, por lo que cualquiera con acceso a ellos obtendr\u00eda las credenciales de nuestras herramientas.</p> <p>En principio esto representa un gran riesgo de seguridad, \u00bfsabr\u00edas razonar o averig\u00fcar por qu\u00e9 esto est\u00e1 dise\u00f1ado de esta forma?</p> <p>Las contrase\u00f1as en texto plano presentan una simplicidad y compatibilidad, estas se usan para facilitar  una configuraci\u00f3n r\u00e1pida y la integraci\u00f3n de herramientas sin complicaciones. Esta seguridad se basa en restringir el acceso al sistema en lugar de cifrar las contrase\u00f1as, por lo que supone un riesgo si alguien se hace con los archivos. </p>"}]}